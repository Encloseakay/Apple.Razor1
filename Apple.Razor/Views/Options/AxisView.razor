@* 引入轴选项视图模型命名空间 *@
@using Apple.Razor.ViewModels.Options
@* 引入轴控制相关的用户控件命名空间 *@
@using Core.UI.Razor.UserCtrls.Axis
@* 引入核心UI基础功能命名空间 *@
@using Core.UI.SeedWork
@* 注入轴视图模型，用于处理轴配置逻辑 *@
@inject AxisVM Model
@* 注入登录视图模型，用于检查用户权限 *@
@inject LoginVM LoginVM

@* 轴配置页面的主容器 *@
<div class="style-div8">
    @* 顶部工具栏，使用边框样式 *@
    <div class="style-div9 sty-border1">
        @* 轴选择区域 *@
        <div class="style-div10">
            @* 遍历轴列表，显示每个轴的选择按钮 *@
            @foreach (var t in Model.Axes)
            {
                @* 轴选择按钮，点击时切换到对应的轴配置 *@
                <MyButton Class="style-button1 style-button4" ClassChecked="style-button100" IsChecked=@(Model.Axis==t) @onclick="@(e=>Model.Axis=t)">@t.NameText</MyButton>
            }
        </div>
    </div>
    @* 轴配置显示区域，使用边框样式，设置内边距和垂直滚动 *@
    <div class="style-div11 sty-border1" style="padding:0px 16px 0px 16px;overflow-y: hidden;">
        @* 使用轴控制组件显示当前选中轴的配置，根据用户权限设置是否只读 *@
        <CtrlAxis ReadOnly="@(!LoginVM.IsAdmin)" Model="@Model.Axis" Class="div1_AxisView" />
    </div>
</div>

@* 代码部分，当前为空，用于后续添加轴相关的逻辑实现 *@
@code {
}
