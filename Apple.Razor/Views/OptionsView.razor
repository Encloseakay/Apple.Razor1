@* 引入视图模型命名空间 *@
@using Apple.Razor.ViewModels
@* 引入选项视图命名空间 *@
@using Apple.Razor.Views.Options
@* 注入主视图模型，用于处理主界面逻辑 *@
@inject MainVM MainVM;

@* 选项页面的主容器 *@
<div class="style-div1">
	@* 当前选中的视图内容显示区域 *@
	<div class="style-div3">
		@ViewSwitch.NowView
	</div>

	@* 选项按钮工具栏，使用边框样式 *@
	<div class="style-div2 sty-border1" style="width:var(--width1);">
		@* IO配置按钮，点击时切换到InOutView *@
		<MyButton Class="style-button1" ClassChecked="style-button100" Command=@(e=>ViewSwitch.SwithNowView(nameof(InOutView))) IsChecked=@(ViewSwitch.NowViewKey==nameof(InOutView)) >IO</MyButton>
		@* 气缸配置按钮，点击时切换到CylinderView *@
		<MyButton Class="style-button1" ClassChecked="style-button100" Command=@(e=>ViewSwitch.SwithNowView(nameof(CylinderView))) IsChecked=@(ViewSwitch.NowViewKey==nameof(CylinderView))>气缸</MyButton>
		@* 轴配置按钮，点击时切换到AxisView *@
		<MyButton Class="style-button1" ClassChecked="style-button100" Command=@(e=>ViewSwitch.SwithNowView(nameof(AxisView))) IsChecked=@(ViewSwitch.NowViewKey==nameof(AxisView))>轴</MyButton>
		@* 通用配置按钮，点击时切换到GeneralView *@
		<MyButton Class="style-button1" ClassChecked="style-button100" Command=@(e=>ViewSwitch.SwithNowView(nameof(GeneralView))) IsChecked=@(ViewSwitch.NowViewKey==nameof(GeneralView))>通用</MyButton>
	</div>
</div>

@* 代码部分，包含组件的逻辑实现 *@
@code {
	@* 获取视图切换器实例，用于管理不同选项视图的切换 *@
	private ViewSwitch<RenderFragment> ViewSwitch => MainVM.OptionViewSwitch;
}
